---
title: "jupyter dark mode - altair"
engine: jupyter
format:
  html:
    css: light-dark.css
    theme:
      light: united
      dark: slate
keep-md: true
filters:
  - light-dark-jupyter.lua
---

```{python}
#| echo: false
#|
# import altair with an abbreviated alias
import altair as alt

# Define a custom theme function
import yaml
import tempfile
import os
import matplotlib.pyplot as plt
from light_dark import LightDarkStateful
from functools import partial

def my_theme(brand_yml):
    brand = yaml.safe_load(open(brand_yml).read())
    fg = brand["color"]["foreground"]
    bg = brand["color"]["background"]
    return {
        'config': {
            'view': {'stroke': 'transparent'},
            'axis': {
                'domainColor': fg,
                'labelColor': fg,
                'titleColor': fg,
            },
            'legend': {
                'labelColor': fg,
                'titleColor': fg,
            },
            'background': bg,  # Background color
        }
    }

def apply_theme(theme):
    alt.themes.enable(theme)

# Register the custom theme and enable it
united_theme = partial(my_theme, 'united-brand.yml')
slate_theme = partial(my_theme, 'slate-brand.yml')
alt.themes.register('united_theme', united_theme)
alt.themes.register('slate_theme', slate_theme)

alt.renderers.enable('html')

# load a sample dataset as a pandas DataFrame
from vega_datasets import data
cars = data.cars()

LightDarkStateful(
    partial(alt.themes.enable, 'united_theme'),
    partial(alt.themes.enable, 'slate_theme'),
    alt.Chart(cars).mark_point().encode(
        x='Horsepower',
        y='Miles_per_Gallon',
        color='Origin',
    ).properties(width=800, height=500).interactive()
)
```

{{< lipsum 2 >}}